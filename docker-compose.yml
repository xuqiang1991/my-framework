services:
  # MySQL数据库
  mysql:
    image: mysql:8.0
    container_name: my-framework-mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: my_framework
      TZ: Asia/Shanghai
    ports:
      - "33306:3306"
    volumes:
      - ./docker/mysql/data:/var/lib/mysql
      - ./docker/mysql/conf:/etc/mysql/conf.d
      - ./docker/mysql/init:/docker-entrypoint-initdb.d
    command:
      --default-authentication-plugin=mysql_native_password
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
    networks:
      - my-framework-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis缓存
  redis:
    image: redis:7-alpine
    container_name: my-framework-redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - ./docker/redis/data:/data
      - ./docker/redis/conf/redis.conf:/etc/redis/redis.conf
    command: redis-server /etc/redis/redis.conf
    networks:
      - my-framework-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Nacos服务注册与配置中心
  nacos:
    image: nacos/nacos-server:v2.3.0
    container_name: my-framework-nacos
    restart: always
    environment:
      MODE: standalone
      SPRING_DATASOURCE_PLATFORM: mysql
      MYSQL_SERVICE_HOST: mysql
      MYSQL_SERVICE_PORT: 3306
      MYSQL_SERVICE_DB_NAME: nacos
      MYSQL_SERVICE_USER: root
      MYSQL_SERVICE_PASSWORD: root
      JVM_XMS: 512m
      JVM_XMX: 512m
    ports:
      - "8848:8848"
      - "9848:9848"
    volumes:
      - ./docker/nacos/logs:/home/nacos/logs
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - my-framework-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8848/nacos"]
      interval: 15s
      timeout: 10s
      retries: 10

  # Sentinel控制台
  sentinel:
    image: bladex/sentinel-dashboard:1.8.6
    container_name: my-framework-sentinel
    restart: always
    ports:
      - "8858:8858"
    environment:
      JAVA_OPTS: "-Dserver.port=8858 -Dcsp.sentinel.dashboard.server=localhost:8858"
    networks:
      - my-framework-network

  # Prometheus监控
  prometheus:
    image: prom/prometheus:latest
    container_name: my-framework-prometheus
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./docker/prometheus/data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    networks:
      - my-framework-network

  # Grafana可视化
  grafana:
    image: grafana/grafana:latest
    container_name: my-framework-grafana
    restart: always
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
    volumes:
      - ./docker/grafana/data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - my-framework-network

  # SkyWalking OAP Server（数据收集和分析）
  skywalking-oap:
    image: apache/skywalking-oap-server:9.7.0
    container_name: my-framework-skywalking-oap
    restart: always
    ports:
      - "11800:11800"  # gRPC 端口
      - "12800:12800"  # HTTP 端口
    environment:
      SW_STORAGE: elasticsearch
      SW_STORAGE_ES_CLUSTER_NODES: elasticsearch:9200
      SW_HEALTH_CHECKER: default
      SW_TELEMETRY: prometheus
      JAVA_OPTS: "-Xms512m -Xmx512m"
    depends_on:
      - elasticsearch
    networks:
      - my-framework-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:12800/internal/l7check || exit 1"]
      interval: 15s  # 缩短检查间隔,更快发现服务就绪
      timeout: 10s
      retries: 10  # 增加重试次数,给予更多启动时间

  # SkyWalking UI（可视化界面）
  skywalking-ui:
    image: apache/skywalking-ui:9.7.0
    container_name: my-framework-skywalking-ui
    restart: always
    ports:
      - "8088:8080"
    environment:
      SW_OAP_ADDRESS: http://skywalking-oap:12800
      SW_ZIPKIN_ADDRESS: http://skywalking-oap:9412
    depends_on:
      skywalking-oap:
        condition: service_healthy
    networks:
      - my-framework-network

  # Elasticsearch（SkyWalking 存储后端）
  elasticsearch:
    image: elasticsearch:8.11.0
    container_name: my-framework-elasticsearch
    restart: always
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      discovery.type: single-node
      xpack.security.enabled: "false"
      ES_JAVA_OPTS: "-Xms512m -Xmx512m"
      cluster.name: skywalking
      network.host: 0.0.0.0
    volumes:
      - ./docker/elasticsearch/data:/usr/share/elasticsearch/data
    networks:
      - my-framework-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 网关服务
  gateway:
    build:
      context: .
      dockerfile: framework-gateway/Dockerfile
    container_name: my-framework-gateway
    restart: always
    ports:
      - "8080:8080"
      - "5005:5005"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_CLOUD_NACOS_DISCOVERY_SERVER_ADDR: nacos:8848
      SPRING_CLOUD_NACOS_CONFIG_SERVER_ADDR: nacos:8848
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379
      # SkyWalking 配置已暂时禁用
      # SW_AGENT_NAME: gateway-service
      # SW_AGENT_COLLECTOR_BACKEND_SERVICES: skywalking-oap:11800
      JAVA_TOOL_OPTIONS: "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005"
    # volumes:
    #   - ./docker/skywalking/agent:/skywalking/agent
    depends_on:
      nacos:
        condition: service_healthy
      redis:
        condition: service_healthy
      # skywalking-oap:
      #   condition: service_healthy
    networks:
      - my-framework-network

  # 认证服务
  auth:
    build:
      context: .
      dockerfile: framework-auth/Dockerfile
    container_name: my-framework-auth
    restart: always
    ports:
      - "8081:8081"
      - "5006:5006"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_CLOUD_NACOS_DISCOVERY_SERVER_ADDR: nacos:8848
      SPRING_CLOUD_NACOS_CONFIG_SERVER_ADDR: nacos:8848
      SPRING_DATASOURCE_DRUID_URL: jdbc:mysql://mysql:3306/my_framework?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/my_framework?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379
      # SkyWalking 配置已暂时禁用
      # SW_AGENT_NAME: auth-service
      # SW_AGENT_COLLECTOR_BACKEND_SERVICES: skywalking-oap:11800
      JAVA_TOOL_OPTIONS: "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5006"
    # volumes:
    #   - ./docker/skywalking/agent:/skywalking/agent
    depends_on:
      mysql:
        condition: service_healthy
      nacos:
        condition: service_healthy
      redis:
        condition: service_healthy
      # skywalking-oap:
      #   condition: service_healthy
    networks:
      - my-framework-network

  # 用户服务
  user:
    build:
      context: .
      dockerfile: framework-user/Dockerfile
    container_name: my-framework-user
    restart: always
    ports:
      - "8082:8082"
      - "5007:5007"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_CLOUD_NACOS_DISCOVERY_SERVER_ADDR: nacos:8848
      SPRING_CLOUD_NACOS_CONFIG_SERVER_ADDR: nacos:8848
      SPRING_DATASOURCE_DRUID_URL: jdbc:mysql://mysql:3306/my_framework?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/my_framework?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379
      # SkyWalking 配置已暂时禁用
      # SW_AGENT_NAME: user-service
      # SW_AGENT_COLLECTOR_BACKEND_SERVICES: skywalking-oap:11800
      JAVA_TOOL_OPTIONS: "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5007"
    # volumes:
    #   - ./docker/skywalking/agent:/skywalking/agent
    depends_on:
      mysql:
        condition: service_healthy
      nacos:
        condition: service_healthy
      redis:
        condition: service_healthy
      # skywalking-oap:
      #   condition: service_healthy
    networks:
      - my-framework-network

  # AI机器人服务
  ai-robot:
    build:
      context: .
      dockerfile: framework-ai-robot/Dockerfile
    container_name: my-framework-ai-robot
    restart: always
    ports:
      - "8083:8083"
      - "5008:5008"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_CLOUD_NACOS_DISCOVERY_SERVER_ADDR: nacos:8848
      SPRING_CLOUD_NACOS_CONFIG_SERVER_ADDR: nacos:8848
      SPRING_DATASOURCE_DRUID_URL: jdbc:mysql://mysql:3306/ai_robot?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/ai_robot?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379
      # Spring AI OpenAI配置（请替换为实际的API Key）
      SPRING_AI_OPENAI_API_KEY: ${OPENAI_API_KEY:-sk-79014baaa6ab4e28ae5b869a12a21f74}
      SPRING_AI_OPENAI_BASE_URL: ${OPENAI_BASE_URL:-https://dashscope.aliyuncs.com/compatible-mode/v1}
      # SkyWalking 配置已暂时禁用
      # SW_AGENT_NAME: ai-robot-service
      # SW_AGENT_COLLECTOR_BACKEND_SERVICES: skywalking-oap:11800
      JAVA_TOOL_OPTIONS: "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5008"
    # volumes:
    #   - ./docker/skywalking/agent:/skywalking/agent
    depends_on:
      mysql:
        condition: service_healthy
      nacos:
        condition: service_healthy
      redis:
        condition: service_healthy
      # skywalking-oap:
      #   condition: service_healthy
    networks:
      - my-framework-network

networks:
  my-framework-network:
    driver: bridge

