server:
  port: 8080

spring:
  application:
    name: framework-gateway
  
  # Nacos配置
  cloud:
    nacos:
      discovery:
        server-addr: ${SPRING_CLOUD_NACOS_DISCOVERY_SERVER_ADDR:127.0.0.1:8848}
        namespace: ${SPRING_CLOUD_NACOS_DISCOVERY_NAMESPACE:dev}
      config:
        server-addr: ${SPRING_CLOUD_NACOS_CONFIG_SERVER_ADDR:127.0.0.1:8848}
        namespace: ${SPRING_CLOUD_NACOS_CONFIG_NAMESPACE:dev}
        file-extension: yml
    
    # Gateway路由配置
    gateway:
      discovery:
        locator:
          enabled: true  # 开启从注册中心动态创建路由的功能
          lower-case-service-id: true  # 使用小写服务名
      
      # 路由规则
      routes:
        # 认证服务路由
        - id: framework-auth
          uri: lb://framework-auth
          predicates:
            - Path=/auth/**
          filters:
            - StripPrefix=0
        
        # 用户服务路由
        - id: framework-user
          uri: lb://framework-user
          predicates:
            - Path=/user/**
          filters:
            - StripPrefix=0
      
      # 全局CORS配置
      globalcors:
        cors-configurations:
          '[/**]':
            allowedOriginPatterns: "*"
            allowedMethods:
              - GET
              - POST
              - PUT
              - DELETE
              - OPTIONS
            allowedHeaders: "*"
            allowCredentials: true
            maxAge: 3600
  
  # Redis配置
  data:
    redis:
      host: ${SPRING_DATA_REDIS_HOST:127.0.0.1}
      port: ${SPRING_DATA_REDIS_PORT:6379}
      password: ${SPRING_DATA_REDIS_PASSWORD:}
      database: ${SPRING_DATA_REDIS_DATABASE:0}
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
          max-wait: -1ms

# Sa-Token配置
sa-token:
  # Token名称
  token-name: Authorization
  # Token前缀
  token-prefix: Bearer
  # Token有效期（单位：秒）-1代表永不过期
  timeout: 604800
  # Token临时有效期（指定时间内无操作就视为token过期）（单位：秒）
  active-timeout: -1
  # 是否允许同一账号并发登录（为true时允许一起登录，为false时新登录挤掉旧登录）
  is-concurrent: true
  # 在多人登录同一账号时，是否共用一个token（为true时所有登录共用一个token，为false时每次登录新建一个token）
  is-share: false
  # Token风格
  token-style: uuid
  # 是否输出操作日志
  is-log: false
  # 是否从cookie读取token
  is-read-cookie: false
  # 是否从请求头读取token
  is-read-header: true

# Sentinel配置
sentinel:
  transport:
    dashboard: ${SENTINEL_DASHBOARD:127.0.0.1:8858}
    port: ${SENTINEL_CLIENT_PORT:8719}
  eager: ${SENTINEL_EAGER:true}

# 监控配置
management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: always
  metrics:
    tags:
      application: ${spring.application.name}

# 日志配置
logging:
  level:
    root: INFO
    com.myframework: DEBUG
  pattern:
    console: '%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n'

